name: CI tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'heads/master') }}

jobs:
  jobs:
    build_jdk:
      name: Build the JDK
      runs-on: ubuntu-latest
      permissions:
        contents: read
      env:
        JAVA_VERSION: 17
      steps:
        - uses: actions/checkout@v4
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: 17
            distribution: 'temurin'
        - name: Install dependencies
          run: |
            sudo apt-get update
            sudo apt-get install --only-upgrade apt
            sudo apt-get install gcc-10 g++-10 libcups2-dev libasound2-dev libfontconfig1-dev \
                libx11-dev libxext-dev libxrender-dev libxrandr-dev libxtst-dev libxt-dev
        - name: Install jtreg
          run: |
            wget https://builds.shipilev.net/jtreg/jtreg-7.5%2B1.zip -O /tmp/jtreg.zip
            unzip /tmp/jtreg.zip -d /tmp/
        - name: Configure the JDK
          run: bash ./configure --with-jtreg=/tmp/jtreg --disable-warnings-as-errors
        - name: Build the JDK
          run: make jdk

  sanity:
    name: ${{ matrix.script }} on JDK ${{ matrix.java_version }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        script: ['cftests-junit', 'cftests-nonjunit']
        java_version: [17]
    env:
      JAVA_VERSION: ${{ matrix.java_version }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java_version }}
          distribution: 'temurin'
    
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.1.0
    
      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.9.0
        if: matrix.script == 'cftests-nonjunit'
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true
    
      - name: Run test script checker/bin-devel/test-${{ matrix.script }}.sh
        run: ./checker/bin-devel/test-${{ matrix.script }}.sh

  remainder:
    name: ${{ matrix.script }} on JDK ${{ matrix.java_version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        script: ['cftests-inference', 'typecheck-part1', 'typecheck-part2', 'plume-lib', 'daikon-part1', 'daikon-part2']
        java_version: [21]
    env:
      JAVA_VERSION: ${{ matrix.java_version }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java_version }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.1.0
    
      - name: Run test script checker/bin-devel/test-${{ matrix.script }}.sh
        run: ./checker/bin-devel/test-${{ matrix.script }}.sh
        if: (matrix.java_version != 8 || (matrix.script != 'plume-lib')) && 
            (matrix.java_version <= 21 || (matrix.script != 'daikon-part1' && matrix.script != 'daikon-part2'))

  otherjdks:
    name: ${{ matrix.script }} on JDK ${{ matrix.java.version }}
    runs-on: ubuntu-latest
    needs: sanity
    permissions:
      contents: read
    strategy:
      fail-fast: true
      matrix:
        script: ['cftests-junit', 'cftests-nonjunit', 'cftests-inference', 'typecheck-part1', 'typecheck-part2']
        java: [{version: '8', experimental: false}, {version: '11', experimental: false}, {version: '21', experimental: false}, {version: '22', experimental: true}, {version: '23-ea', experimental: true}, {version: '24-ea', experimental: true}]
    env:
      JAVA_VERSION: ${{ matrix.java.version }}
    continue-on-error: ${{ matrix.java.experimental }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java.version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java.version }}
          distribution: 'temurin'
    
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.1.0
    
      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@0.9.0
        if: matrix.script == 'cftests-nonjunit'
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true
    
      - name: Run test script checker/bin-devel/test-${{ matrix.script }}.sh
        run: ./checker/bin-devel/test-${{ matrix.script }}.sh
